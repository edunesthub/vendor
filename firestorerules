rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ðŸ”¥ Publicly readable menu data, write only if authenticated
    match /restaurant/{restaurantId} {
      allow read: if true;
      allow write: if request.auth != null;

      match /menu/{menuId} {
        allow read: if true;
        allow write: if request.auth != null;
      }

      match /categories/{categoryId} {
        allow read: if true;
        allow write: if request.auth != null;
      }
    }

    // âœ… Delivery Mapping: Admin-only write, self-read
    match /deliveryMapping/{email} {
      allow read: if request.auth != null &&
        (request.auth.token.email == email || request.auth.token.email in ["admin@gmail.com"]);
      allow write: if request.auth != null &&
        request.auth.token.email in ["admin@gmail.com"];
    }

    // âœ… Vendor Mapping: Admin-only
    match /vendorMappings/{email} {
      allow read, write: if request.auth != null &&
        request.auth.token.email in ["admin@gmail.com"];
    }

    // âœ… Orders: Authenticated users only
    match /orders/{orderId} {
     allow read, write: if true
    }

    // âœ… Cart: User-specific access
    match /cart/{cartId} {
      allow read, write: if request.auth != null && request.auth.uid == cartId;
    }

    // âœ… Users collection: Read all, write own
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // âœ… Delivery Fees: Public read, no write
    match /deliveryFees/{document=**} {
      allow read: if true;
      allow write: if false;
    }

    // âœ… Admin flags
    match /admins/{email} {
      allow read: if request.auth != null && request.auth.token.email == email;
      allow write: if false;
    }

    // âœ… Subscriptions (payments, plans, etc.)
    match /subscriptions/{document=**} {
      allow read, write: if request.auth != null;
    }

    // âœ… Settings
    match /settings/{docId} {
      allow read: if true;
      allow write: if request.auth != null &&
        request.auth.token.email in ["admin@gmail.com"];
    }
  }
}
